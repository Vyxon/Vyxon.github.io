import { Env } from '../components/env';
export declare enum API_AUTH_TYPE {
    PUBLIC_KEY = 0,
    TOKEN = 1
}
export declare class ApiBase {
    protected env: Env;
    auth: string;
    authType: API_AUTH_TYPE;
    constructor(auth: string, authType?: API_AUTH_TYPE);
    /**
     * Current method can change environment. By default environment = sandbox.
     * Also we can change domain alias for this environment. By default domain_alias = paydock.com
     *
     * @example
     * widget.setEnv('production');
     * @param {string} env - sandbox, production
     * @param {string} [alias] - Own domain alias
     */
    setEnv(env: string, alias?: string): ApiBase;
    getClient(method: 'GET' | 'POST', link: string): {
        config: XMLHttpRequest;
        send: (body: any, cb?: (data: any) => void, errorCb?: (data: any) => void) => void;
    };
    getClientPromise<Req extends object, Res>(method: 'GET' | 'POST', link: string): {
        config: XMLHttpRequest;
        send: (body: Req) => Promise<Res>;
    };
    parser({ text, status }: {
        text: string;
        status: number;
    }, cb: any, errorCb: any): any;
    parserPromise<Res>({ text, status }: {
        text: string;
        status: number;
    }): Promise<Res>;
    setAuthHeader(request: XMLHttpRequest): void;
}
