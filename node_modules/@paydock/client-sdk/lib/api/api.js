import { ApiCharge } from './api-charge';
import { Browser } from '../helper/browser';
import { ApiBase } from './api-base';
/**
 * Interface for browser details response.
 * @interface BrowserDetails
 *
 * @param {string} [name]
 * @param {string} [java_enabled]
 * @param {string} [language]
 * @param {string} [screen_height]
 * @param {string} [screen_width]
 * @param {string} [time_zone]
 * @param {string} [color_depth]
 * */
/**
 * Class Api include method for working with paydock api
 * @constructor
 *
 * @param {string} publicKey - PayDock users public key
 * @example
 * var api = new Api('publicKey');
 *
 *
 **/
export class Api extends ApiBase {
    constructor(publicKey) {
        super(publicKey);
        this.publicKey = this.auth;
    }
    /**
     * Method for getting browser details
     *
     * @example
     * api.getBrowserDetails();
     *
     * @return {BrowserDetails} Browser details object
     */
    getBrowserDetails() {
        return {
            name: Browser.getBrowserName(),
            java_enabled: Browser.isJavaEnabled().toString(),
            language: Browser.getLanguage(),
            screen_height: Browser.getScreenHeight().toString(),
            screen_width: Browser.getScreenWidth().toString(),
            time_zone: Browser.getTimezoneOffset().toString(),
            color_depth: Browser.getColorDepth().toString(),
        };
    }
    /**
     * Current method allows to work with charge related endpoints
     *
     * @example
     * api.charge();
     */
    charge() {
        return new ApiCharge(this);
    }
}
//# sourceMappingURL=../../src/lib/api/api.js.map