import { GATEWAY_TYPE } from "../gateway/index";
import { CheckoutButton } from "./checkout-button";
/**
 * Class ZipmoneyCheckoutButton is wrapper of CheckoutButton transform usual button into checkout
 *
 * @extends CheckoutButton
 *
 * @constructor
 *
 * @param {string} selector - Selector of html element.
 * @param {string} publicKey - PayDock users public key
 * @param {string} [gatewayId=default] - PayDock's gatewayId. By default or if put 'default', it will use the selected default gateway
 * @example
 * var widget = new ZipmoneyCheckoutButton('#button', 'publicKey','gatewayId');
 **/
export class ZipmoneyCheckoutButton extends CheckoutButton {
    constructor(selector, publicKey, gatewayId = 'default') {
        super(selector, publicKey, gatewayId, GATEWAY_TYPE.ZIPMONEY);
        this.publicKey = publicKey;
        this.gatewayId = gatewayId;
    }
    /**
     * Method for setting suspended redirect uri. Redirect after referred checkout
     *
     * The URI is used for a redirect after the checkout is complete.
     * This can be provided, even if using in-context checkout (sdk). By default, the standard styled page will be used.
     * If using in-context (sdk) we will not automatically redirect to this URI.
     *

     * @param {uri} string - uri for redirect (by default)
     */
    setSuspendedRedirectUri(uri) {
        super.setSuspendedRedirectUri(uri);
    }
}
//# sourceMappingURL=../../src/lib/checkout-button/zipmoney-checkout-button.js.map