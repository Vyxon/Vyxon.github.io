export var ABILITY;
(function (ABILITY) {
    ABILITY[ABILITY["POPUP_CLOSE"] = 0] = "POPUP_CLOSE";
    ABILITY[ABILITY["BACKDROP_DISPLAY_CONTINUE"] = 1] = "BACKDROP_DISPLAY_CONTINUE";
    ABILITY[ABILITY["POPUP_FOCUS"] = 2] = "POPUP_FOCUS";
})(ABILITY || (ABILITY = {}));
;
const GATEWAY = {
    PAYPAL_CLASSIC: 'PaypalClassic',
    AFTERPAY: 'Afterpay',
    ZIP_MONEY: 'ZipMoney',
};
const GatewayAbilityMaps = [
    {
        gateway: '*',
        abilities: [ABILITY.BACKDROP_DISPLAY_CONTINUE, ABILITY.POPUP_CLOSE, ABILITY.POPUP_FOCUS],
    },
    {
        gateway: GATEWAY.ZIP_MONEY,
        abilities: [],
    },
];
export class AbilityGuard {
    constructor() {
        this.usedGateway = null;
    }
    useGateway(gateway) {
        this.usedGateway = gateway;
    }
    reset() {
        this.usedGateway = null;
    }
    isAllow(ability) {
        let gatewayAbility = null;
        for (let item of GatewayAbilityMaps) {
            if (item.gateway === this.usedGateway)
                gatewayAbility = item;
        }
        if (!gatewayAbility)
            gatewayAbility = GatewayAbilityMaps[0];
        return !!(ABILITY[ability] in gatewayAbility.abilities);
    }
}
//# sourceMappingURL=../../src/lib/components/ability-guard.js.map