import { Event } from "../helper/event";
export class Container {
    constructor(selector) {
        this.selector = selector;
    }
    isExist() {
        return !!(this.getElement());
    }
    getStyles(allowValue) {
        if (!this.isExist())
            return;
        let container = this.getElement();
        let styles = container.getAttribute("widget-style");
        if (!styles)
            return {};
        let containerStyleCollection = styles.split(';');
        if (typeof containerStyleCollection !== 'undefined' && !containerStyleCollection.length)
            return {};
        return this.convertConfigs(containerStyleCollection, allowValue);
    }
    on(name, cb) {
        if (!this.isExist())
            return;
        Event.subscribe(name, this.getElement(), cb);
    }
    getAttr(allowValue) {
        if (!this.isExist())
            return;
        let container = this.getElement();
        let containerTextCollection = [];
        for (let index in allowValue) {
            if (!allowValue.hasOwnProperty(index))
                continue;
            let item = allowValue[index].replace(/_/g, "-");
            let currentConfig = container.getAttribute(item);
            if (currentConfig) {
                containerTextCollection.push(`${allowValue[index]}:${currentConfig}`);
            }
        }
        if (typeof containerTextCollection !== 'undefined' && !containerTextCollection.length)
            return {};
        return this.convertConfigs(containerTextCollection, allowValue);
    }
    getElement() {
        return document.querySelector(this.selector);
    }
    convertConfigs(params, allowValue) {
        let config = {};
        for (let index in params) {
            if (!params.hasOwnProperty(index))
                continue;
            let style = params[index].split(':');
            let collectionKey = style[0].replace(/-/g, "_").trim();
            if (allowValue.indexOf(collectionKey) !== -1)
                config[collectionKey] = style[1].trim();
        }
        return config;
    }
}
//# sourceMappingURL=../../src/lib/components/container.js.map