export class FormInterceptor {
    constructor(selector) {
        this.intercepted = false;
        this.selector = selector;
    }
    getElement() {
        return document.querySelector(this.selector);
    }
    isExist() {
        return !!(this.getElement());
    }
    beforeSubmit(cb) {
        if (!this.isExist())
            return;
        this.subscribe(this.getElement(), (event) => {
            event.preventDefault();
            this.intercepted = true;
            cb.apply(this, []);
        });
    }
    continueSubmit() {
        if (!this.isExist() || !this.intercepted)
            return;
        this.intercepted = false;
        setTimeout(() => {
            this.getElement().submit();
        }, 50);
    }
    subscribe(subject, listener) {
        if (subject.addEventListener) {
            subject.addEventListener("submit", listener);
        }
        else {
            subject.attachEvent("onsubmit", listener);
        }
    }
}
//# sourceMappingURL=../../src/lib/components/form-Interceptor.js.map