import { Env, ENV } from "./env";
import { Url } from "../helper/url";
import { Uuid } from '../helper/uuid';
export const WIDGET_LINK = '/remote-action';
export const VAULT_DISPLAY_WIDGET_LINK = '/vault-display';
export const PAYMENT_SOURCE_LINK = '/payment-sources';
export const SECURE_3D = '/3ds/webhook';
export const FLYPAY_LINK = '/wallet/flypay';
export const FLYPAY_LOGO_LINK = '/images/logo.png';
export class Link {
    constructor(linkResource) {
        this.params = {};
        this.widgetId = Uuid.generate();
        this.linkResource = linkResource;
        this.env = new Env([
            { env: ENV.SANDBOX_KOVENA, url: 'https://widget-sandbox.' },
            { env: ENV.SANDBOX_DEMO, url: 'https://widget-sandbox-demo.' },
            { env: ENV.SANDBOX_DEMO_KOVENA, url: 'https://widget-sandbox-demo.' },
            { env: ENV.SANDBOX, url: 'https://widget-sandbox.' },
            { env: ENV.PROD, url: 'https://widget.' },
            { env: ENV.STAGING, url: 'https://widsta.' },
            { env: ENV.STAGING_2, url: 'https://widsta-2.' },
            { env: ENV.STAGING_3, url: 'https://widsta-3.' },
            { env: ENV.STAGING_4, url: 'https://widsta-4.' },
            { env: ENV.STAGING_5, url: 'https://widsta-5.' },
        ]);
        this.setParams({ widget_id: this.widgetId });
    }
    getNetUrl() {
        return this.env.getConf().url + this.linkResource;
    }
    getUrl() {
        let url = this.getNetUrl();
        let params = this.getParams();
        for (let key in params) {
            if (params.hasOwnProperty(key))
                url = Url.extendSearchParams(url, key, params[key]);
        }
        return url;
    }
    setParams(params) {
        this.params = Object.assign({}, this.params, params);
    }
    concatParams(params) {
        for (let key in params) {
            if (!params.hasOwnProperty(key) || !params[key].length)
                continue;
            if (typeof this.params[key] !== 'string')
                this.params[key] = '';
            if (this.params[key].length)
                this.params[key] += ',' + params[key];
            else
                this.params[key] += params[key];
        }
    }
    getParams() {
        return this.params;
    }
    setEnv(env, alias) {
        this.env.setEnv(env, alias);
    }
    getEnv() {
        return this.env.getEnv();
    }
}
//# sourceMappingURL=../../src/lib/components/link.js.map