import { ObjectHelper } from '../helper/object';
import { Trigger } from "./trigger";
export const TRIGGER = {
    CLOSE: 'close',
    UPDATED: 'updated',
};
export class WalletTrigger extends Trigger {
    constructor(iFrame, widgetId) {
        super(iFrame);
        this.widgetId = widgetId;
    }
    push(triggerName, data = {}) {
        if (!this.iFrame.isExist())
            return;
        if (ObjectHelper.values(TRIGGER).indexOf(triggerName) === -1)
            console.warn('unsupported trigger type');
        let body = {
            message_source: 'wallet.paydock',
            reference_id: this.widgetId,
            trigger: triggerName,
            destination: 'widget.paydock',
            data: data,
        };
        this.iFrame.getElement().contentWindow.postMessage(JSON.stringify(body), '*');
    }
}
//# sourceMappingURL=../../src/lib/components/wallet-trigger.js.map