import { SUPPORTED_CHECKOUT_META_COLLECTION } from "../components/param";
import { HttpCore } from "../components/http-core";
const EXTERNAL_CHECKOUT_LINK = '/v1/payment_sources/external_checkout';
export class Builder extends HttpCore {
    constructor(gatewayID, successRedirectUrl, errorRedirectUrl) {
        super();
        this.body = {
            gateway_id: gatewayID,
            meta: {},
            success_redirect_url: successRedirectUrl,
            error_redirect_url: errorRedirectUrl,
            redirect_url: successRedirectUrl,
        };
    }
    getLink() {
        return EXTERNAL_CHECKOUT_LINK;
    }
    setDescriptions(text) {
        this.body.description = text;
    }
    setMeta(meta) {
        for (let key in meta) {
            if (!meta.hasOwnProperty(key))
                continue;
            if (SUPPORTED_CHECKOUT_META_COLLECTION.indexOf(key) !== -1)
                this.body.meta[key] = meta[key];
            else
                console.warn(`ExternalCheckout::setMeta: unsupported meta key ${key}`);
        }
    }
    getConfigs() {
        return this.body;
    }
    send(publicKey, cb, errorCb = (err, code) => { }) {
        this.create(publicKey, this.getConfigs(), (data, status) => {
            cb(data);
        }, (err, status) => {
            if (typeof err.message === "undefined")
                errorCb(`${status}: unknown error`, 'unknown_error');
            else
                errorCb(err.message, err.code);
        });
    }
}
//# sourceMappingURL=../../src/lib/external-checkout/builder.js.map