export class Uuid {
    static generate() {
        if (typeof (window) !== "undefined" && typeof (window.crypto) !== "undefined" && typeof (window.crypto.getRandomValues) !== "undefined") {
            let buf = new Uint16Array(8);
            window.crypto.getRandomValues(buf);
            return (this.hash(buf[0]) + this.hash(buf[1]) + "-" + this.hash(buf[2]) + "-" + this.hash(buf[3]) + "-" + this.hash(buf[4]) + "-" + this.hash(buf[5]) + this.hash(buf[6]) + this.hash(buf[7]));
        }
        else {
            return this.random() + this.random() + "-" + this.random() + "-" + this.random() + "-" + this.random() + "-" + this.random() + this.random() + this.random();
        }
    }
    static hash(number) {
        let hash = number.toString(16);
        while (hash.length < 4) {
            hash = "0" + hash;
        }
        return hash;
    }
    ;
    static random() {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    }
}
//# sourceMappingURL=../../src/lib/helper/uuid.js.map