import { HttpCore } from "../components/http-core";
export const TYPE = {
    EXTERNAL_CHECKOUT_TOKEN: 'external_checkout_token',
    CHECKOUT_TOKEN: 'checkout_token',
    BANK_ACCOUNT: 'bank_account',
    CARD: 'card',
};
const LINK = '/v1/payment_sources/tokens';
export class Builder extends HttpCore {
    constructor(gatewayID, body, type = TYPE.CARD) {
        super();
        this.body = {
            gateway_id: gatewayID,
            type: type,
        };
        switch (type) {
            case TYPE.CARD:
            case TYPE.BANK_ACCOUNT:
                delete body.gateway_id;
                delete body.type;
                delete body.checkout_token;
                this.body = Object.assign(this.body, body);
                break;
            case TYPE.CHECKOUT_TOKEN:
            case TYPE.EXTERNAL_CHECKOUT_TOKEN:
                this.body.checkout_token = body;
                break;
            default:
                throw new Error('Unsupported type of PaymentSourceToken');
        }
    }
    getLink() {
        return LINK;
    }
    send(publicKey, cb, errorCb = (err) => { }) {
        this.create(publicKey, this.getConfigs(), (data, status) => {
            return cb(data);
        }, (err, status) => {
            if (typeof err.message === "undefined")
                errorCb('unknown error');
            else
                errorCb(err.message);
        });
    }
    getConfigs() {
        return this.body;
    }
}
//# sourceMappingURL=../../src/lib/payment-source/builder.js.map